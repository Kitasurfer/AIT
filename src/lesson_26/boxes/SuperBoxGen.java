package lesson_26.boxes; // Указание пакета, к которому относится класс, помогает в организации проекта и структурировании кода

/* Group: 52-1, "AIT Hi-tech team" GMBH
Author: Bogdan Fesenko
Date: 17-10-2024
*/
// Комментарий с информацией о группе, авторе и дате создания файла. Это полезно для ведения документации и истории изменений

public class SuperBoxGen<T> {
    // Объявление обобщенного класса `SuperBoxGen`, где `T` является типом параметра. Обобщения позволяют классу работать с любыми типами данных

    private T value;
    // Приватное поле `value` типа `T`. Тип `T` будет определен во время создания объекта класса

    public SuperBoxGen(T value) {
        // Конструктор класса принимает аргумент типа `T` и инициализирует поле `value`
        this.value = value;
        // `this.value` используется для ссылки на поле экземпляра класса, чтобы избежать путаницы с параметром конструктора
    }

    public T getValue() {
        // Метод-геттер для получения значения поля `value`. Возвращает текущее значение, которое может быть любым типом, определенным при создании объекта
        return value;
    }

    public void setValue(T value) {
        // Метод-сеттер для установки нового значения поля `value`. Тип `T` определяется при создании объекта класса
        this.value = value;
    }

    @Override
    public String toString() {
        // Переопределение метода `toString()` для возврата строкового представления объекта
        return "SuperBox{" +
                "value=" + value +
                '}';
        // Строковое представление объекта включает имя класса и текущее значение поля `value`
    }
}
